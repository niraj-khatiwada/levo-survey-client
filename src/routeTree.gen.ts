/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SurveyBuilderRouteImport } from './routes/survey-builder'
import { Route as IndexRouteImport } from './routes/index'
import { Route as SurveysIdIndexRouteImport } from './routes/surveys/$id/index'
import { Route as SurveysIdTakeRouteImport } from './routes/surveys/$id/take'

const SurveyBuilderRoute = SurveyBuilderRouteImport.update({
  id: '/survey-builder',
  path: '/survey-builder',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const SurveysIdIndexRoute = SurveysIdIndexRouteImport.update({
  id: '/surveys/$id/',
  path: '/surveys/$id/',
  getParentRoute: () => rootRouteImport,
} as any)
const SurveysIdTakeRoute = SurveysIdTakeRouteImport.update({
  id: '/surveys/$id/take',
  path: '/surveys/$id/take',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/survey-builder': typeof SurveyBuilderRoute
  '/surveys/$id/take': typeof SurveysIdTakeRoute
  '/surveys/$id': typeof SurveysIdIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/survey-builder': typeof SurveyBuilderRoute
  '/surveys/$id/take': typeof SurveysIdTakeRoute
  '/surveys/$id': typeof SurveysIdIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/survey-builder': typeof SurveyBuilderRoute
  '/surveys/$id/take': typeof SurveysIdTakeRoute
  '/surveys/$id/': typeof SurveysIdIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/survey-builder' | '/surveys/$id/take' | '/surveys/$id'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/survey-builder' | '/surveys/$id/take' | '/surveys/$id'
  id:
    | '__root__'
    | '/'
    | '/survey-builder'
    | '/surveys/$id/take'
    | '/surveys/$id/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  SurveyBuilderRoute: typeof SurveyBuilderRoute
  SurveysIdTakeRoute: typeof SurveysIdTakeRoute
  SurveysIdIndexRoute: typeof SurveysIdIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/survey-builder': {
      id: '/survey-builder'
      path: '/survey-builder'
      fullPath: '/survey-builder'
      preLoaderRoute: typeof SurveyBuilderRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/surveys/$id/': {
      id: '/surveys/$id/'
      path: '/surveys/$id'
      fullPath: '/surveys/$id'
      preLoaderRoute: typeof SurveysIdIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/surveys/$id/take': {
      id: '/surveys/$id/take'
      path: '/surveys/$id/take'
      fullPath: '/surveys/$id/take'
      preLoaderRoute: typeof SurveysIdTakeRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  SurveyBuilderRoute: SurveyBuilderRoute,
  SurveysIdTakeRoute: SurveysIdTakeRoute,
  SurveysIdIndexRoute: SurveysIdIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
